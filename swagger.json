{
    "swagger": "2.0",
    "info": {
      "description": "WeConnect provides a platform that brings businesses and individuals together.",
      "version": "1.0.0",
      "title": "WeConnect",
      "contact": {
        "email": "daramolaajibigad@gmail.com"
      }
    },
    "host": "weconnect-api.herokuapp.com",
    "basePath": "/api/v1/weconnect",
    "tags": [
      {
        "name": "User",
        "description": "Signup and Signin Users"
      },
      {
        "name": "Business",
        "description": "Adds and view Businesses"
      },
      {
        "name": "Review",
        "description": "Adds and retrieves business reviews"
      }
    ],
    "schemes": [
      "https",
      "http"
    ],
    "paths": {
      "/auth/signup": {
        "post": {
          "tags": [
            "User"
          ],
          "summary": "Registers a user",
          "description": "This endpoint uses a post request to register a new user",
          "operationId": "signup",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Create user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/userSignup"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "User registered successfully",
              "schema": {
                "$ref": "#/definitions/signupResponse"
              }
            },
            "400": {
              "description": "Invalid email address",
              "schema": {
                "$ref": "#/definitions/wrongEmail"
              }
            },
            "406": {
              "description": "Invalid Input",
              "schema": {
                "$ref": "#/definitions/invalidInput"
              }
            },
            "409": {
              "description": "Email already Exists",
              "schema": {
                "$ref": "#/definitions/existingEmail"
              }
            }
          }
        }
      },
      "/auth/updateProfile": {
        "put": {
          "tags": [
            "User"
          ],
          "summary": "Updates a user",
          "description": "This endpoint uses a put request to update a new user",
          "operationId": "signup",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Update user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/userUpdate"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User updated successfully",
              "schema": {
                "$ref": "#/definitions/userUpdateresponse"
              }
            },
            "400": {
              "description": "Invalid email address",
              "schema": {
                "$ref": "#/definitions/wrongEmail"
              }
            },
            "406": {
              "description": "Invalid Input",
              "schema": {
                "$ref": "#/definitions/invalidInput"
              }
            },
            "409": {
              "description": "Email already Exists",
              "schema": {
                "$ref": "#/definitions/existingEmail"
              }
            }
          }
        }
      },
      "/auth/login": {
        "post": {
          "tags": [
            "User"
          ],
          "summary": "Logs in a user",
          "description": "This endpoint logs in a user",
          "operationId": "login",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Login user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/userLogin"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Login user",
              "schema": {
                "$ref": "#/definitions/login"
              }
            },
            "401": {
              "description": "Authentication failed",
              "schema": {
                "$ref": "#/definitions/wrongPassword"
              }
            },
            "400": {
              "description": "Invalid Input",
              "schema": {
                "$ref": "#/definitions/invalidInput"
              }
            }
          }
        }
      },
      "/businesses": {
        "post": {
          "tags": [
            "Business"
          ],
          "summary": "Add a new business to the database",
          "description": "Add business to database.",
          "operationId": "createBusiness",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "authorization",
              "in": "header",
              "description": "Token Authentication",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "description": "business object that needs to be added to the database",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Business"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Business successfully created",
              "schema": {
                "type": "object",
                "items":{
                  "$ref": "#/definitions/registerBusiness"
                }
              }
            },
            "400": {
              "description": "Invalid Input"
            }
          } 
        },
        "get": {
          "tags": [
            "Business"
          ],
          "summary": "Get all businesses in the database",
          "description": "Gets all businesses",
          "operationId": "listBusinesses",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "authorization",
              "in": "header",
              "description": "Token Authentication",
              "required": false,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Businesses found",
              "schema": {
                "type": "array",
                "items":{
                  "$ref": "#/definitions/Business"
                }
              }
            },
            "404": {
              "description": "Business not found"
            }
          }
        }
      },
      "/businesses/{businessId}": {
        "get": {
          "tags": [
            "Business"
          ],
          "summary": "Get business with the businessId from the database ",
          "description": "Returns a business",
          "operationId": "retrieveBusiness",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "authorization",
              "in": "header",
              "description": "Token Authentication",
              "required": false,
              "type": "string"
            },
            {
              "name": "businessId",
              "in": "path",
              "description": "businessId of business to return",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "Business was successfully found",
              "schema": {
                "$ref": "#/definitions/retrieveBusiness"
              }
            },
            "404": {
              "description": "Business not found!",
              "schema": {
                "$ref": "#/definitions/BusinessNotFound"
              }
            },
            "400": {
              "description": "Invalid BusinessId"
            }
          }
        },
        "put": {
          "tags": [
            "Business"
          ],
          "summary": "Update an existing business profile",
          "description": "Updates business profile",
          "operationId": "updateBusiness",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "authorization",
              "in": "header",
              "description": "Token Authentication",
              "required": true,
              "type": "string"
            },
            {
              "name": "businessId",
              "in": "path",
              "description": "BusinessId of business that would be updated",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "in": "body",
              "name": "body",
              "description": "business object that needs to be added to the database",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Business"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Business successfully updated",
              "schema": {
                "$ref": "#/definitions/updatedBusiness"
              }
            },
            "404": {
              "description": "Business not found",
              "schema": {
                "$ref": "#/definitions/BusinessNotFound"
              }
            },
            "400": {
              "description": "Invalid Input",
              "schema": {
                "$ref": "#/definitions/invalidInput"
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Business"
          ],
          "summary": "Remove a business",
          "description": "Deletes a business",
          "operationId": "removeBusiness",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "authorization",
              "in": "header",
              "description": "Token Authentication",
              "required": true,
              "type": "string"
            },
            {
              "name": "businessId",
              "in": "path",
              "description": "The businessId of the business that would be deleted",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "Business was successfully deleted",
              "schema": {
                "$ref": "#/definitions/removeBusiness"
              }
            },
            "404": {
              "description": "Business not found",
              "schema": {
                "$ref": "#/definitions/BusinessNotFound"
              }
            },
            "400": {
              "description": "Invalid BusinessId"
            }
          }
        }
      },
      "/businesses/?location=location": {
        "get": {
          "tags": [
            "Business"
          ],
          "summary": "Search for businesses by location",
          "description": "This endpoint searches for businesses by their location",
          "operationId": "listBusinesses",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "authorization",
              "in": "header",
              "description": "Token Authentication",
              "required": false,
              "type": "string"
            },
            {
              "name": "location",
              "in": "query",
              "description": "Business location",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Business Found",
              "schema": {
                "$ref": "#/definitions/retrieveBusiness"
              }
            },
            "404": {
              "description": "Business Not Found"
            },
            "400": {
              "description": "Invalid location"
            }
          }
        }
      },
      "/businesses/?category=category": {
        "get": {
          "tags": [
            "Business"
          ],
          "summary": "Search businesses by category",
          "description": "This endpoint searches for businesses by their category",
          "operationId": "listBusinesses",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "authorization",
              "in": "header",
              "description": "Token Authentication",
              "required": false,
              "type": "string"
            },
            {
              "name": "category",
              "in": "query",
              "description": "Business category",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Businesses found",
              "schema": {
                "$ref": "#/definitions/retrieveBusiness"
              }
            },
            "404": {
              "description": "Business Not Found"
            },
            "400": {
              "description": "Invalid category"
            }
          }
        }
      },
      "/businesses/?location=location&category=category": {
        "get": {
          "tags": [
            "Business"
          ],
          "summary": "Search businesses by location and category",
          "description": "This endpoint searches businesses by their location and category",
          "operationId": "listBusinesses",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "authorization",
              "in": "header",
              "description": "Token Authentication",
              "required": false,
              "type": "string"
            },
            {
              "name": "location",
              "in": "query",
              "description": "Business location",
              "required": true,
              "type": "string"
            },
            {
              "name": "category",
              "in": "query",
              "description": "Business category",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Businesses found",
              "schema": {
                "$ref": "#/definitions/retrieveBusiness"
              }
            },
            "404": {
              "description": "Business Not Found"
            },
            "400": {
              "description": "Invalid location or category"
            }
          }
        }
      },
      "/businesses/{businessId}/reviews": {
        "post": {
          "tags": [
            "Review"
          ],
          "summary": "Add a review for a business",
          "description": "Submits a review record for a business.",
          "operationId": "addReview",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "authorization",
              "in": "header",
              "description": "Token Authentication",
              "required": true,
              "type": "string"
            },
            {
              "name": "businessId",
              "in": "path",
              "description": "business to add review to",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "201": {
              "description": "Review was added successfully",
              "schema": {
                "$ref": "#/definitions/addReviewRes"
              }
            },
            "404": {
              "description": "Business was not found",
              "schema": {
                "$ref": "#/definitions/BusinessNotFound"
              }
            },
            "400": {
              "description": "Invalid Input",
              "schema": {
                "$ref": "#/definitions/invalidInput"
              }
            }
          }
        },
        "get": {
          "tags": [
            "Review"
          ],
          "summary": "Get all reviews for a business",
          "description": "Get all reviews for a business",
          "operationId": "getReview",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "authorization",
              "in": "header",
              "description": "Token Authentication",
              "required": false,
              "type": "string"
            },
            {
              "name": "businessId",
              "in": "path",
              "description": "Business id of business to get reviews",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "Reviews found",
              "schema": {
                "$ref": "#/definitions/BusinessReview"
              }
            },
            "404": {
              "description": "Business not found",
              "schema": {
                "$ref": "#/definitions/BusinessNotFound"
              }
            },
            "400": {
              "description": "Invalid Input"
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "example": "Ajiboye"
          },
          "lastname": {
            "type": "string",
            "example": "Daramola"
          },
          "email": {
            "type": "string",
            "example": "daramolaajibigad@gmail.com"
          },
          "password": {
            "type": "string",
            "password": "iamapassword"
          },
          "id": {
            "type": "integer",
            "uniqueItems": true,
            "example": 1
          },
          "telephoneNumber": {
            "type": "string"
          },
          "homeNumber": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "example": "3/10/2018, 10:40:17 PM"
          },
          "updateAt": {
            "type": "string",
            "example": "3/10/2018, 10:40:17 PM"
          }
        }
      },
      "userSignup": {
        "type": "object",
        "required": [
          "firstname",
          "lastname",
          "email",
          "password",
          "telephoneNumber"
        ],
        "properties": {
          "firstname": {
            "type": "string",
            "example": "Dammy"
          },
          "lastname": {
            "type": "string",
            "example": "Samuel"
          },
          "email": {
            "type": "string",
            "example": "pammword@yahoo.com"
          },
          "password": {
            "type": "string",
            "example": "pammord"
          },
          "telephoneNumber": {
            "type": "string",
            "example": "08023112091"
          },
          "homeNumber": {
            "type":"string",
            "example":"08023112071"
          }
        }
      },
      "signupResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User successfully created"
          },
          "user": {
            "type": "object",
            "$ref": "#/definitions/User"
          }
        }
      },
      "wrongEmail": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Please enter a valid email address"
          }
        }
      },
      "invalidInput": {
        "type": "array",
        "example": {"valdiationErrors": ["errormessage"]}
      },
      "existingEmail": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "This email already exists"
          }
        }
      },
      "userUpdate": {
        "type": "object",
        "required": [
        ],
        "properties": {
          "firstname": {
            "type": "string",
            "example": "Dammy"
          },
          "lastname": {
            "type": "string",
            "example": "Samuel"
          },
          "email": {
            "type": "string",
            "example": "pammword@yahoo.com"
          },
          "password": {
            "type": "string",
            "example": "pammord"
          },
          "telephoneNumber": {
            "type": "string",
            "example": "08023112091"
          },
          "homeNumber": {
            "type":"string",
            "example":"08023112071"
          }
        }
      },
      "userUpdateresponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User updated successfully"
          },
          "user": {
            "type": "object",
            "$ref": "#/definitions/User"
          }
        }
      },
      "userLogin": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "example": "miracle@yahoo.com"
          },
          "password": {
            "type": "string",
            "example": "pmodass"
          }
        }
      },
      "login": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Authentication successful"
          }
        }
      },
      "wrongPassword": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Authentication failed"
          }
        }
      },
      "Business": {
        "type": "object",
        "required": ["name", "category", "location", "address", "email", "telephoneNumber", "description"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Clash of clans"
          },
          "category": {
            "type": "string",
            "example": "Gaming"
          },
          "address": {
            "type": "string",
            "example": "23, Jakande Street"
          },
          "email": {
            "type": "string",
            "example": "daramolaajibigad@gmail.com"
          },
          "telephoneNumber": {
            "type": "string",
            "example": "07011021507"
              },
          "homeNumber": {
            "type": "string",
            "example": "07011091807"
              },
          "description": {
            "type": "string",
            "example": "A mobile game for collaboration"
          },
          "reviews": {
            "type": "array",
            "example": [1, 2, 3]
          },
          "createdAt": {
            "type": "string",
            "example": "3/10/2018, 10:40:17 PM"
          },
          "updateAt": {
            "type": "string",
            "example": "3/10/2018, 10:40:17 PM"
          }
        }
      },
      "registerBusiness": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Business registered successfully"
          }
        },
        "business": {
        "type": "object",
        "required": ["name", "category", "location", "address", "email", "telephoneNumber", "description"],
        "properties": {
          "id": {
            "type": "integer",
            "format":"int64",
            "example": 5
          },
          "name": {
            "type": "string",
            "example": "Clash of clans"
          },
          "category": {
            "type": "string",
            "example": "Gaming"
          },
          "address": {
            "type": "string",
            "example": "23, Jakande Street"
          },
          "email": {
            "type": "string",
            "example": "daramolaajibigad@gmail.com"
          },
          "telephoneNumber": {
            "type": "integer",
            "example": "07011021507"
            },
          "homeNumber": {
            "type": "integer",
            "example": "07011091807"
            },
          "description": {
            "type": "string",
            "example": "A mobile game for collaboration"
          },
          "reviews": {
            "type": "array",
            "example": [{"review":"nice" }, {"review":"bad" }]
          },
          "createdAt": {
            "type": "string",
            "example": "3/10/2018, 10:40:17 PM"
          },
          "updateAt": {
            "type": "string",
            "example": "3/10/2018, 10:40:17 PM"
          }
        }
    }
  },
      "BusinessNotFound": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Business Not Found!"
          }
        }
      },
      "retrieveBusiness": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Business found"
          },
          "business": {
            "type": "object",
            "$ref": "#/definitions/Business"
          }
        }
      },
    
      "updatedBusiness": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Business successfully Updated"
          },
          "business": {
            "type": "object",
            "$ref": "#/definitions/Business"
          }
        }
      },
      "removeBusiness": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Business has been deleted"
          },
          "business": {
            "type": "object",
            "$ref": "#/definitions/Business"
          }
        }
      },
      "businessSearch": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Businesses found"
          },
          "business": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Business"
            }
          }
        }
      },
      "reviewresponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Response Submitted"
          }
        }
      },
      "BusinessReview": {
        "type": "array",
        "items": {
          "ReviewerId": {
            "type": "integer",
            "example": 1
          },
          "reviewId": {
            "type": "integer",
            "example": 1
          },
          "businessId":{
            "type": "integer",
            "example": 1
          },
          "responses":{
            "type": "array",
            "example": [{"id": 1 ,"message":"Thank You"}]
          },
          "createdAt": {
            "type": "string",
            "example": "3/10/2018, 10:40:17 PM"
          },
          "updateAt": {
            "type": "string",
            "example": "3/10/2018, 10:40:17 PM"
          }
        }
      },
      "addReview": {
        "type": "object",
        "required": [
          "review"
        ],
        "properties": {
          "review": {
            "type": "string",
            "example": "Nice Business"
          }
        }
      },
      "addReviewRes": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Review was successfully added"
          },
          "review": {
            "type": "object",
            "$ref": "#/definitions/BusinessReview"
          }
        }
      },
      "getBusinessReview": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Reviews found"
          },
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/BusinessReview"
            }
          }
        }
      },
    "externalDocs": {
      "description": "",
      "url": ""
     }
   }
  }